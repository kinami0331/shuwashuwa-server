<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="team.combinatorics.shuwashuwa.dao.ServiceEventDao">

    <resultMap type="team.combinatorics.shuwashuwa.model.dto.ServiceEventDetailDTO" id="serviceEventResultMap">
        <result column="id" jdbcType="INTEGER" property="id"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="u_name" jdbcType="VARCHAR" property="userName"/>
        <result column="volunteer_id" jdbcType="INTEGER" property="volunteerId"/>
        <result column="v_name" jdbcType="VARCHAR" property="volunteerName"/>
        <result column="repairing_result" jdbcType="VARCHAR" property="repairingResult"/>
        <result column="feedback" jdbcType="VARCHAR" property="feedback"/>
        <result column="activity_id" jdbcType="INTEGER" property="activityId"/>
        <result column="time_slot" jdbcType="INTEGER" property="timeSlot"/>
        <result column="problem_summary" jdbcType="VARCHAR" property="problemSummary"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="is_draft" jdbcType="BOOLEAN" property="draft"/>
        <result column="is_closed" jdbcType="BOOLEAN" property="closed"/>
        <collection property="serviceForms"
                    select="team.combinatorics.shuwashuwa.dao.ServiceFormDao.listServiceFormsByServiceEventID"
                    ofType="team.combinatorics.shuwashuwa.model.pojo.ServiceForm"
                    javaType="java.util.ArrayList"
                    column="id">
        </collection>
    </resultMap>

    <resultMap type="team.combinatorics.shuwashuwa.model.dto.ServiceAbstractDTO" id="serviceAbstractResultMap">
        <result column="id" jdbcType="INTEGER" property="serviceEventId"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="computer_model" jdbcType="VARCHAR" property="computerModel"/>
        <result column="problem_summary" jdbcType="VARCHAR" property="problemSummary"/>
    </resultMap>

    <resultMap type="team.combinatorics.shuwashuwa.model.po.ServiceEventPO" id="serviceEventPOResultMap">
        <result column="id" jdbcType="INTEGER" property="id"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="volunteer_id" jdbcType="INTEGER" property="volunteerId"/>
        <result column="repairing_result" jdbcType="VARCHAR" property="repairingResult"/>
        <result column="feedback" jdbcType="VARCHAR" property="feedback"/>
        <result column="activity_id" jdbcType="INTEGER" property="activityId"/>
        <result column="time_slot" jdbcType="INTEGER" property="timeSlot"/>
        <result column="problem_summary" jdbcType="VARCHAR" property="problemSummary"/>
        <result column="valid_form_id" jdbcType="INTEGER" property="validFormId"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="is_draft" jdbcType="BOOLEAN" property="draft"/>
        <result column="is_closed" jdbcType="BOOLEAN" property="closed"/>
    </resultMap>

    <insert id="insertByUserID" parameterType="int">
        insert into service_event(user_id)
        values (#{userID})
    </insert>

    <insert id="insert" useGeneratedKeys="true" keyColumn="id" keyProperty="serviceEvent.id"
            parameterType="team.combinatorics.shuwashuwa.model.po.ServiceEventPO">
        insert into service_event(user_id, activity_id, time_slot)
        values (#{serviceEvent.userId}, #{serviceEvent.activityId}, #{serviceEvent.timeSlot})
    </insert>

    <update id="updateByVolunteer">
        update service_event
        set repairing_result=#{result}
        where id = #{eventID}
    </update>

    <update id="updateVolunteerInfo">
        update service_event
        set volunteer_id=#{volunteerID}
        where id = #{eventID}
    </update>

    <update id="updateAppointment">
        update service_event
        set activity_id=#{activityID},
            time_slot=#{timeSlot}
        where id = #{id}
    </update>

    <update id="updateFeedback">
        update service_event
        set feedback=#{feedback}
        where id = #{id}
    </update>

    <update id="updateStatus">
        update service_event
        set status = #{status}
        where id = #{id}
    </update>

    <update id="updateDraft">
        update service_event
        set is_draft = #{draft}
        where id = #{id}
    </update>

    <update id="updateClosed">
        update service_event
        set is_closed = #{closed}
        where id = #{id}
    </update>

    <update id="updateValidFormID">
        update service_event
        set valid_form_id = #{formID}
        where id = #{eventID}
    </update>


    <select id="countServiceEventsByCondition"
            parameterType="team.combinatorics.shuwashuwa.dao.co.SelectServiceEventCO"
            resultType="int">
        select count(*) from service_event
        <where>
            <if test="condition.beginTime != null">
                create_time >= #{condition.beginTime}
            </if>
            <if test="condition.endTime != null">
                and create_time &lt;= #{condition.endTime}
            </if>
            <if test="condition.userID != null">
                and user_id = #{condition.userId}
            </if>
            <if test="condition.volunteerId != null">
                and volunteer_id = #{condition.volunteerId}
            </if>
            <if test="condition.status != null">
                and status = #{condition.status}
            </if>
            <if test="condition.activityId != null">
                and activity_id = #{condition.activityId}
            </if>
            <if test="condition.timeSlot != null">
                and time_slot = #{condition.timeSlot}
            </if>
            <if test="condition.draft != null">
                and is_draft = #{condition.draft}
            </if>
            <if test="condition.timeSlot != null">
                and is_closed = #{condition.is_closed}
            </if>
        </where>
    </select>

    <select id="getServiceEventByID" resultMap="serviceEventResultMap">
        select s.id,
               user_id,
               u.user_name u_name,
               volunteer_id,
               v.user_name v_name,
               repairing_result,
               feedback,
               activity_id,
               time_slot,
               problem_summary,
               status,
               is_draft,
               is_closed
        from service_event s
                 left join user u
                           on s.user_id = u.id
                 left join volunteer v
                           on s.volunteer_id = v.id
        where s.id = #{id}
    </select>

    <select id="listServiceEventsByCondition" resultMap="serviceEventResultMap"
            parameterType="team.combinatorics.shuwashuwa.dao.co.SelectServiceEventCO">
        select
        s.id,
        user_id,
        u.user_name u_name,
        volunteer_id,
        v.user_name v_name,
        repairing_result,
        feedback,
        activity_id,
        time_slot,
        problem_summary,
        status,
        is_draft,
        is_closed
        from service_event s
        left join user u
        on s.user_id = u.id
        left join volunteer v
        on s.volunteer_id = v.id

        <where>
            <if test="condition.beginTime != null">
                create_time >= #{condition.beginTime}
            </if>
            <if test="condition.endTime != null">
                and create_time &lt;= #{condition.endTime}
            </if>
            <if test="condition.userID != null">
                and user_id = #{condition.userId}
            </if>
            <if test="condition.volunteerId != null">
                and volunteer_id = #{condition.volunteerId}
            </if>
            <if test="condition.status != null">
                and status = #{condition.status}
            </if>
            <if test="condition.activityId != null">
                and activity_id = #{condition.activityId}
            </if>
            <if test="condition.timeSlot != null">
                and time_slot = #{condition.timeSlot}
            </if>
            <if test="condition.draft != null">
                and is_draft = #{condition.draft}
            </if>
            <if test="condition.timeSlot != null">
                and is_closed = #{condition.is_closed}
            </if>
        </where>
    </select>

    <select id="listAbstractServiceEventsByCondition" resultMap="serviceAbstractResultMap">
        select service_event.id, status, user_id, problem_summary, computer_model from service_event left join
        service_form
        on
        (service_event.valid_form_id = service_form.id)
        <where>
            <if test="condition.beginTime != null">
                create_time >= #{condition.beginTime}
            </if>
            <if test="condition.endTime != null">
                and create_time &lt;= #{condition.endTime}
            </if>
            <if test="condition.userID != null">
                and user_id = #{condition.userId}
            </if>
            <if test="condition.volunteerId != null">
                and volunteer_id = #{condition.volunteerId}
            </if>
            <if test="condition.status != null">
                and status = #{condition.status}
            </if>
            <if test="condition.activityId != null">
                and activity_id = #{condition.activityId}
            </if>
            <if test="condition.timeSlot != null">
                and time_slot = #{condition.timeSlot}
            </if>
            <if test="condition.draft != null">
                and is_draft = #{condition.draft}
            </if>
            <if test="condition.timeSlot != null">
                and is_closed = #{condition.is_closed}
            </if>
        </where>
    </select>

    <select id="getPOByID" resultMap="serviceEventPOResultMap">
        select *
        from service_event
        where id = #{id}
    </select>
</mapper>
